import { Data } from "@ndn/packet"
import { Decoder } from "@ndn/tlv"

const Wire = new Uint8Array([
  0x06, 0xbb, 0x07, 0x74, 0x08, 0x06, 0x67, 0x6f, 0x2d, 0x6e, 0x64, 0x6e, 0x08, 0x04, 0x74, 0x65, 0x73, 0x74, 0x08,
  0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01,
  0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61,
  0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08,
  0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01,
  0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x01, 0x61, 0x08, 0x0a, 0x30, 0x30, 0x30, 0x30,
  0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x14, 0x10, 0x18, 0x01, 0x00, 0x19, 0x02, 0x0f, 0xa0, 0x1a, 0x07, 0x08, 0x05,
  0x31, 0x30, 0x30, 0x30, 0x30, 0x15, 0x0a, 0x52, 0xfd, 0xfc, 0x07, 0x21, 0x82, 0x65, 0x4f, 0x16, 0x3f, 0x16, 0x03,
  0x1b, 0x01, 0x00, 0x17, 0x20, 0xa3, 0x3c, 0xc2, 0x68, 0xf8, 0x76, 0x4f, 0xe7, 0xfa, 0xb9, 0xe7, 0x39, 0xfb, 0xe0,
  0x47, 0xdc, 0xff, 0xdc, 0x0a, 0x3c, 0x4d, 0xb5, 0xf2, 0x4b, 0x3c, 0x53, 0xd0, 0xd2, 0x26, 0x81, 0xea, 0xc6
])

const oneRun = async (buf: Uint8Array) => {
  Decoder.decode(buf, Data)
}

if (import.meta.main) {
  const tic = performance.now()
  for (let i = 0; i < 1000000; i++) {
    oneRun(Wire)
  }
  const toc = performance.now()
  console.log(`Total time: ${(toc - tic) / 1000.0} seconds`)
}
