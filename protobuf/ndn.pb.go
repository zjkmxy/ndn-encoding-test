// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: ndn.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Name struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component [][]byte `protobuf:"bytes,8,rep,name=component,proto3" json:"component,omitempty"`
}

func (x *Name) Reset() {
	*x = Name{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ndn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Name) ProtoMessage() {}

func (x *Name) ProtoReflect() protoreflect.Message {
	mi := &file_ndn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Name.ProtoReflect.Descriptor instead.
func (*Name) Descriptor() ([]byte, []int) {
	return file_ndn_proto_rawDescGZIP(), []int{0}
}

func (x *Name) GetComponent() [][]byte {
	if x != nil {
		return x.Component
	}
	return nil
}

type FinalBlockId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component []byte `protobuf:"bytes,8,opt,name=component,proto3" json:"component,omitempty"`
}

func (x *FinalBlockId) Reset() {
	*x = FinalBlockId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ndn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalBlockId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalBlockId) ProtoMessage() {}

func (x *FinalBlockId) ProtoReflect() protoreflect.Message {
	mi := &file_ndn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalBlockId.ProtoReflect.Descriptor instead.
func (*FinalBlockId) Descriptor() ([]byte, []int) {
	return file_ndn_proto_rawDescGZIP(), []int{1}
}

func (x *FinalBlockId) GetComponent() []byte {
	if x != nil {
		return x.Component
	}
	return nil
}

type ForwardingHint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name []*Name `protobuf:"bytes,7,rep,name=name,proto3" json:"name,omitempty"`
}

func (x *ForwardingHint) Reset() {
	*x = ForwardingHint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ndn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardingHint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardingHint) ProtoMessage() {}

func (x *ForwardingHint) ProtoReflect() protoreflect.Message {
	mi := &file_ndn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardingHint.ProtoReflect.Descriptor instead.
func (*ForwardingHint) Descriptor() ([]byte, []int) {
	return file_ndn_proto_rawDescGZIP(), []int{2}
}

func (x *ForwardingHint) GetName() []*Name {
	if x != nil {
		return x.Name
	}
	return nil
}

type KeyLocator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *Name `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *KeyLocator) Reset() {
	*x = KeyLocator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ndn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyLocator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyLocator) ProtoMessage() {}

func (x *KeyLocator) ProtoReflect() protoreflect.Message {
	mi := &file_ndn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyLocator.ProtoReflect.Descriptor instead.
func (*KeyLocator) Descriptor() ([]byte, []int) {
	return file_ndn_proto_rawDescGZIP(), []int{3}
}

func (x *KeyLocator) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

type SignatureInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignatureType   uint64      `protobuf:"varint,27,opt,name=signatureType,proto3" json:"signatureType,omitempty"`
	KeyLocator      *KeyLocator `protobuf:"bytes,28,opt,name=keyLocator,proto3" json:"keyLocator,omitempty"`
	SignatureNonce  []byte      `protobuf:"bytes,38,opt,name=signatureNonce,proto3" json:"signatureNonce,omitempty"`
	SignatureTime   uint64      `protobuf:"varint,40,opt,name=signatureTime,proto3" json:"signatureTime,omitempty"`
	SignatureSeqNum uint64      `protobuf:"varint,42,opt,name=signatureSeqNum,proto3" json:"signatureSeqNum,omitempty"`
}

func (x *SignatureInfo) Reset() {
	*x = SignatureInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ndn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureInfo) ProtoMessage() {}

func (x *SignatureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ndn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureInfo.ProtoReflect.Descriptor instead.
func (*SignatureInfo) Descriptor() ([]byte, []int) {
	return file_ndn_proto_rawDescGZIP(), []int{4}
}

func (x *SignatureInfo) GetSignatureType() uint64 {
	if x != nil {
		return x.SignatureType
	}
	return 0
}

func (x *SignatureInfo) GetKeyLocator() *KeyLocator {
	if x != nil {
		return x.KeyLocator
	}
	return nil
}

func (x *SignatureInfo) GetSignatureNonce() []byte {
	if x != nil {
		return x.SignatureNonce
	}
	return nil
}

func (x *SignatureInfo) GetSignatureTime() uint64 {
	if x != nil {
		return x.SignatureTime
	}
	return 0
}

func (x *SignatureInfo) GetSignatureSeqNum() uint64 {
	if x != nil {
		return x.SignatureSeqNum
	}
	return 0
}

type Interest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           *Name           `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	CanBePrefix    bool            `protobuf:"varint,33,opt,name=canBePrefix,proto3" json:"canBePrefix,omitempty"`
	MustBeFresh    bool            `protobuf:"varint,18,opt,name=mustBeFresh,proto3" json:"mustBeFresh,omitempty"`
	ForwardingHint *ForwardingHint `protobuf:"bytes,30,opt,name=forwardingHint,proto3" json:"forwardingHint,omitempty"`
	Nonce          uint32          `protobuf:"fixed32,10,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Lifetime       uint64          `protobuf:"varint,12,opt,name=lifetime,proto3" json:"lifetime,omitempty"`
	HopLimit       uint32          `protobuf:"varint,34,opt,name=hopLimit,proto3" json:"hopLimit,omitempty"`
	AppParam       []byte          `protobuf:"bytes,36,opt,name=appParam,proto3" json:"appParam,omitempty"`
	SignatureInfo  *SignatureInfo  `protobuf:"bytes,44,opt,name=signatureInfo,proto3" json:"signatureInfo,omitempty"`
	SignatureValue []byte          `protobuf:"bytes,46,opt,name=signatureValue,proto3" json:"signatureValue,omitempty"`
}

func (x *Interest) Reset() {
	*x = Interest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ndn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interest) ProtoMessage() {}

func (x *Interest) ProtoReflect() protoreflect.Message {
	mi := &file_ndn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interest.ProtoReflect.Descriptor instead.
func (*Interest) Descriptor() ([]byte, []int) {
	return file_ndn_proto_rawDescGZIP(), []int{5}
}

func (x *Interest) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Interest) GetCanBePrefix() bool {
	if x != nil {
		return x.CanBePrefix
	}
	return false
}

func (x *Interest) GetMustBeFresh() bool {
	if x != nil {
		return x.MustBeFresh
	}
	return false
}

func (x *Interest) GetForwardingHint() *ForwardingHint {
	if x != nil {
		return x.ForwardingHint
	}
	return nil
}

func (x *Interest) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Interest) GetLifetime() uint64 {
	if x != nil {
		return x.Lifetime
	}
	return 0
}

func (x *Interest) GetHopLimit() uint32 {
	if x != nil {
		return x.HopLimit
	}
	return 0
}

func (x *Interest) GetAppParam() []byte {
	if x != nil {
		return x.AppParam
	}
	return nil
}

func (x *Interest) GetSignatureInfo() *SignatureInfo {
	if x != nil {
		return x.SignatureInfo
	}
	return nil
}

func (x *Interest) GetSignatureValue() []byte {
	if x != nil {
		return x.SignatureValue
	}
	return nil
}

type MetaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentType     uint64        `protobuf:"varint,24,opt,name=contentType,proto3" json:"contentType,omitempty"`
	FreshnessPeriod uint64        `protobuf:"varint,25,opt,name=freshnessPeriod,proto3" json:"freshnessPeriod,omitempty"`
	FinalBlockId    *FinalBlockId `protobuf:"bytes,26,opt,name=finalBlockId,proto3" json:"finalBlockId,omitempty"`
}

func (x *MetaInfo) Reset() {
	*x = MetaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ndn_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaInfo) ProtoMessage() {}

func (x *MetaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ndn_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaInfo.ProtoReflect.Descriptor instead.
func (*MetaInfo) Descriptor() ([]byte, []int) {
	return file_ndn_proto_rawDescGZIP(), []int{6}
}

func (x *MetaInfo) GetContentType() uint64 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *MetaInfo) GetFreshnessPeriod() uint64 {
	if x != nil {
		return x.FreshnessPeriod
	}
	return 0
}

func (x *MetaInfo) GetFinalBlockId() *FinalBlockId {
	if x != nil {
		return x.FinalBlockId
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           *Name          `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	MetaInfo       *MetaInfo      `protobuf:"bytes,20,opt,name=metaInfo,proto3" json:"metaInfo,omitempty"`
	Content        []byte         `protobuf:"bytes,21,opt,name=content,proto3" json:"content,omitempty"`
	SignatureInfo  *SignatureInfo `protobuf:"bytes,22,opt,name=signatureInfo,proto3" json:"signatureInfo,omitempty"`
	SignatureValue []byte         `protobuf:"bytes,23,opt,name=signatureValue,proto3" json:"signatureValue,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ndn_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_ndn_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_ndn_proto_rawDescGZIP(), []int{7}
}

func (x *Data) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Data) GetMetaInfo() *MetaInfo {
	if x != nil {
		return x.MetaInfo
	}
	return nil
}

func (x *Data) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Data) GetSignatureInfo() *SignatureInfo {
	if x != nil {
		return x.SignatureInfo
	}
	return nil
}

func (x *Data) GetSignatureValue() []byte {
	if x != nil {
		return x.SignatureValue
	}
	return nil
}

var File_ndn_proto protoreflect.FileDescriptor

var file_ndn_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6e, 0x64, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6e, 0x64, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x24, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x0c, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x0e, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6e, 0x64, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x30, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6e, 0x64,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xe3, 0x01, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x6b, 0x65, 0x79,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6e, 0x64, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x26, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x71, 0x4e, 0x75, 0x6d,
	0x18, 0x2a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x53, 0x65, 0x71, 0x4e, 0x75, 0x6d, 0x22, 0x85, 0x03, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6e, 0x64, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x42,
	0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x21, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63,
	0x61, 0x6e, 0x42, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x75,
	0x73, 0x74, 0x42, 0x65, 0x46, 0x72, 0x65, 0x73, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x6d, 0x75, 0x73, 0x74, 0x42, 0x65, 0x46, 0x72, 0x65, 0x73, 0x68, 0x12, 0x40, 0x0a, 0x0e,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x6e, 0x74, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x64, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x0e,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x07, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x68, 0x6f, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x70, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x61, 0x70, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x3d, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6e, 0x64, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x92, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x66, 0x72, 0x65, 0x73, 0x68, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x66, 0x72, 0x65, 0x73, 0x68, 0x6e, 0x65,
	0x73, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x3a, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6e, 0x64, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x22, 0xdb, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6e, 0x64,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x64, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x64, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x7a, 0x6a, 0x6b, 0x6d, 0x78, 0x79, 0x2f, 0x6e, 0x64, 0x6e, 0x2d, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x2d, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ndn_proto_rawDescOnce sync.Once
	file_ndn_proto_rawDescData = file_ndn_proto_rawDesc
)

func file_ndn_proto_rawDescGZIP() []byte {
	file_ndn_proto_rawDescOnce.Do(func() {
		file_ndn_proto_rawDescData = protoimpl.X.CompressGZIP(file_ndn_proto_rawDescData)
	})
	return file_ndn_proto_rawDescData
}

var file_ndn_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_ndn_proto_goTypes = []interface{}{
	(*Name)(nil),           // 0: ndnproto.Name
	(*FinalBlockId)(nil),   // 1: ndnproto.FinalBlockId
	(*ForwardingHint)(nil), // 2: ndnproto.ForwardingHint
	(*KeyLocator)(nil),     // 3: ndnproto.KeyLocator
	(*SignatureInfo)(nil),  // 4: ndnproto.SignatureInfo
	(*Interest)(nil),       // 5: ndnproto.Interest
	(*MetaInfo)(nil),       // 6: ndnproto.MetaInfo
	(*Data)(nil),           // 7: ndnproto.Data
}
var file_ndn_proto_depIdxs = []int32{
	0,  // 0: ndnproto.ForwardingHint.name:type_name -> ndnproto.Name
	0,  // 1: ndnproto.KeyLocator.name:type_name -> ndnproto.Name
	3,  // 2: ndnproto.SignatureInfo.keyLocator:type_name -> ndnproto.KeyLocator
	0,  // 3: ndnproto.Interest.name:type_name -> ndnproto.Name
	2,  // 4: ndnproto.Interest.forwardingHint:type_name -> ndnproto.ForwardingHint
	4,  // 5: ndnproto.Interest.signatureInfo:type_name -> ndnproto.SignatureInfo
	1,  // 6: ndnproto.MetaInfo.finalBlockId:type_name -> ndnproto.FinalBlockId
	0,  // 7: ndnproto.Data.name:type_name -> ndnproto.Name
	6,  // 8: ndnproto.Data.metaInfo:type_name -> ndnproto.MetaInfo
	4,  // 9: ndnproto.Data.signatureInfo:type_name -> ndnproto.SignatureInfo
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_ndn_proto_init() }
func file_ndn_proto_init() {
	if File_ndn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ndn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Name); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ndn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalBlockId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ndn_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardingHint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ndn_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyLocator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ndn_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ndn_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ndn_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ndn_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ndn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ndn_proto_goTypes,
		DependencyIndexes: file_ndn_proto_depIdxs,
		MessageInfos:      file_ndn_proto_msgTypes,
	}.Build()
	File_ndn_proto = out.File
	file_ndn_proto_rawDesc = nil
	file_ndn_proto_goTypes = nil
	file_ndn_proto_depIdxs = nil
}
